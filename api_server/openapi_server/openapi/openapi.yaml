openapi: 3.0.1
info:
  contact:
    email: opensource@vwt.digital
    name: VolkerWessels Telecom - Digital Ambition Team
    url: https://vwt-digital.github.io/
  description: Endpoint to retreive the latest car locations
  license:
    name: GNU GPLv3
    url: https://www.gnu.org/licenses/gpl.txt
  title: snbplanningtool
  version: 1.0.0
  x-audience: company-internal
  x-api-id: e2a63575-f436-4e31-8f34-fadbad0d9693
servers:
- url: //PROJECT_ID.appspot.com/
paths:
  /cars:
    get:
      description: Get a list of all cars and their driver information.
      operationId: cars_list
      parameters:
      - description: Time offset range in hours for retrieving entries
        in: query
        name: offset
        schema:
          default: 168
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cars'
          description: Successful response - returns an array of locations with info
      security:
      - OAuth2AzureAD:
        - snbplanningapi.planner
      summary: Get car info
      x-openapi-router-controller: openapi_server.controllers.cars_controller
    post:
      description: Post a list of all car geolocations with info
      operationId: cars_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Car'
        required: true
      responses:
        201:
          content: {}
          description: Successful POST
      security:
      - OAuth2AzureAD:
        - snbplanningapi.editor
      summary: Post car info
      x-openapi-router-controller: openapi_server.controllers.cars_controller
      x-codegen-request-body-name: body
  /cars/distances:
    get:
      description: Get a list of Hyrde car tokens along with the distance and travel
        time from the specified point. Only returns tokens linked to cars.
      operationId: car_distances_list
      parameters:
      - description: The workitem for which to find the nearest car locations
        in: query
        name: work_item
        required: true
        schema:
          type: string
      - description: Sort results by distance or travel time.
        in: query
        name: sort
        schema:
          default: travel_time
          enum:
          - travel_time
          - distance
          type: string
      - description: Total numer of distances to return.
        in: query
        name: limit
        schema:
          default: 3
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarDistances'
          description: Successful response - returns an array of distances
      security:
      - OAuth2AzureAD:
        - snbplanningapi.planner
      summary: Get car distances from a point or workitem
      x-openapi-router-controller: openapi_server.controllers.cars_controller
  /cars/locations:
    get:
      description: Get a list of all car geolocations, with their linked Hyrde tokens.
      operationId: car_locations_list
      parameters:
      - description: Time offset range in hours for retrieving entries
        in: query
        name: offset
        schema:
          default: 168
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarLocations'
          description: Successful response - returns an array of locations
      security:
      - OAuth2AzureAD:
        - snbplanningapi.read
      summary: Get car locations
      x-openapi-router-controller: openapi_server.controllers.cars_controller
  /tokens:
    get:
      description: List of tokens
      operationId: list_tokens
      parameters:
      - in: query
        name: assigned
        schema:
          default: false
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
          description: OK
      security:
      - OAuth2AzureAD:
        - snbplanningapi.read
      summary: Get a list of tokens
      x-openapi-router-controller: openapi_server.controllers.cars_controller
  /workitems:
    get:
      description: List of work items
      operationId: list_work_items
      parameters:
      - description: Select only active workitems. When set to false, retrieves all
          workitems
        in: query
        name: active
        schema:
          default: false
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: OK
      security:
      - OAuth2AzureAD:
        - snbplanningapi.planner
      summary: Get a list of work items
      x-openapi-router-controller: openapi_server.controllers.workitems_controller
    x-eac-ignore: true
components:
  schemas:
    CarDistances:
      description: Collection of car distances.
      example:
        items:
        - token: vwt/hyrde/01202321
          distance: 5.0
          travel_time: 1200
        - token: vwt/hyrde/01202321
          distance: 5.0
          travel_time: 1200
      properties:
        items:
          items:
            $ref: '#/components/schemas/CarDistance'
          type: array
      type: object
    CarDistance:
      description: Hyrde token with distance and traveltime.
      example:
        token: vwt/hyrde/01202321
        distance: 5.0
        travel_time: 1200
      properties:
        token:
          description: the Hyrde car token
          type: string
        distance:
          description: distance in km.
          format: decimal
          type: number
        travel_time:
          description: Estimated travel time in seconds.
          format: int32
          type: integer
      type: object
    CarLocations:
      description: Collection of car locations.
      example:
        type: FeatureCollection
        features:
        - type: Feature
          geometry:
            type: Point
            coordinates:
            - 5.3
            - 52.6
          properties:
            license_plate: AA-BB-11
        - type: Feature
          geometry:
            type: Point
            coordinates:
            - 5.4
            - 52.5
          properties: {}
      properties:
        type:
          type: string
        features:
          items:
            $ref: '#/components/schemas/CarLocation'
          type: array
      required:
      - features
      - type
      type: object
    CarLocation:
      description: The location of a car.
      example:
        type: Feature
        geometry:
          type: Point
          coordinates:
          - 5.3
          - 52.6
        properties:
          id: 1
          license_plate: AA-BB-11
          driver_name: Pietje Puk
      properties:
        geometry:
          $ref: '#/components/schemas/Geometry'
        type:
          type: string
        properties:
          properties: {}
          type: object
      required:
      - geometry
      - properties
      - type
      type: object
    Geometry:
      description: Geometry element
      example: |-
        type: "Point",
        coordinates:
          - 5.2,
          - 52.4
      properties:
        type:
          enum:
          - Point
          type: string
        coordinates:
          items:
            type: number
          type: array
      required:
      - coordinates
      - type
      type: object
    Cars:
      example:
        items:
        - id: 123456789
          license_plate: AB-12-CD
          driver_name: Billy Gates
          driver_skill: Metende
          token: some-token-value
      properties:
        items:
          $ref: '#/components/schemas/Car'
      type: object
    Car:
      description: Information on a car and their driver
      example:
      - id: 123456789
        license_plate: AB-12-CD
        driver_name: Billy Gates
        driver_skill: Metende
        token: some-token-value
      properties:
        id:
          type: string
        license_plate:
          type: string
        driver_name:
          type: string
        driver_skill:
          enum:
          - ""
          - Metende
          - Lasser
          - Leerling
          - Kraanmachinist
          - Overig
          - NLS
          - Cluster
          type: string
        driver_employee_number:
          type: string
        token:
          type: string
      required:
      - driver_name
      - license_plate
      type: object
    Tokens:
      description: Collection of list with tokens
      example:
        items: '{}'
      properties:
        items:
          properties: {}
          type: object
      required:
      - items
      type: object
    WorkItems:
      example:
        items:
          zip: zip
          last_updated: 2000-01-23T04:56:07.000+00:00
          start_timestamp: 2000-01-23T04:56:07.000+00:00
          city: city
          administration: administration
          project: project
          description: description
          employee_name: employee_name
          resolve_before_timestamp: 2000-01-23T04:56:07.000+00:00
          sub_order_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          house: house
          end_timestamp: 2000-01-23T04:56:07.000+00:00
          is_geocoded: true
          street: street
          extra: extra
          stagnation: true
          employee_number: employee_number
          geometry: |-
            type: "Point",
            coordinates:
              - 5.2,
              - 52.4
          l2_guid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          category: category
          task_type: task_type
          order_id: order_id
          status: status
      properties:
        items:
          $ref: '#/components/schemas/WorkItem'
      type: object
    WorkItem:
      description: Link2 work item
      example:
        zip: zip
        last_updated: 2000-01-23T04:56:07.000+00:00
        start_timestamp: 2000-01-23T04:56:07.000+00:00
        city: city
        administration: administration
        project: project
        description: description
        employee_name: employee_name
        resolve_before_timestamp: 2000-01-23T04:56:07.000+00:00
        sub_order_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        house: house
        end_timestamp: 2000-01-23T04:56:07.000+00:00
        is_geocoded: true
        street: street
        extra: extra
        stagnation: true
        employee_number: employee_number
        geometry: |-
          type: "Point",
          coordinates:
            - 5.2,
            - 52.4
        l2_guid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        category: category
        task_type: task_type
        order_id: order_id
        status: status
      properties:
        l2_guid:
          format: uuid
          type: string
        administration:
          type: string
        category:
          type: string
        task_type:
          type: string
        project:
          type: string
        status:
          type: string
        description:
          type: string
        start_timestamp:
          format: date-time
          type: string
        end_timestamp:
          format: date-time
          type: string
        last_updated:
          format: date-time
          type: string
        resolve_before_timestamp:
          format: date-time
          type: string
        city:
          type: string
        zip:
          type: string
        house:
          type: string
        street:
          type: string
        extra:
          type: string
        is_geocoded:
          type: boolean
        geometry:
          $ref: '#/components/schemas/Geometry'
        employee_name:
          type: string
        employee_number:
          type: string
        order_id:
          type: string
        sub_order_id:
          format: uuid
          type: string
        stagnation:
          type: boolean
      type: object
  securitySchemes:
    OAuth2AzureAD:
      description: OAuth through Azure AD
      flows:
        authorizationCode:
          authorizationUrl: https://azuread.url
          scopes:
            snbplanningapi.read: View
            snbplanningapi.planner: Planner
            snbplanningapi.editor: Editor
          tokenUrl: https://azuread.url
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller_.info_from_OAuth2AzureAD
      x-scopeValidateFunc: connexion.decorators.security.validate_scope
x-zally-ignore:
- 101
- 104
- 105
