swagger: '2.0'
info:
  title: snbplanningtool
  description: Endpoint to retreive the latest car locations
  contact:
    name: VolkerWessels Telecom - Digital Ambition Team
    url: 'https://vwt-digital.github.io/'
    email: opensource@vwt.digital
  license:
    name: GNU GPLv3
    url: 'https://www.gnu.org/licenses/gpl.txt'
  version: 1.0.0
  x-audience: company-internal
  x-api-id: e2a63575-f436-4e31-8f34-fadbad0d9693
host: PROJECT_ID.appspot.com
security:
- OAuth2AzureAD:
    - snbplanningapi.read
produces:
  - application/json
paths:
  /cars:
    get:
      summary: Get car locations
      description: Get a list of all car geolocations
      parameters:
        - in: query
          name: offset
          type: integer
          required: false
          default: 168
          description: Time offset range in hours for retrieving entries
      responses:
        '200':
          description: Successful response - returns an array of locations
          schema:
            $ref: '#/definitions/Cars'
  /carsinfo:
    get:
      summary: Get car info
      description: Get a list of all car geolocations with info
      parameters:
        - in: query
          name: offset
          type: integer
          required: false
          default: 168
          description: Time offset range in hours for retrieving entries
      responses:
        '200':
          description: Successful response - returns an array of locations with info
          schema:
            $ref: '#/definitions/CarsInfo'
    post:
      summary: Post car info
      description: Post a list of all car geolocations with info
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CarsInfo'
      responses:
        '201':
          description: Successful POST
definitions:
  Cars:
    description: Collection of Cars
    required:
      - type
      - features
    type: object
    properties:
      type:
        type: string
      features:
        type: array
        items:
          $ref: '#/definitions/Car'
    example:
      type: FeatureCollection
      features:
        - type: Feature
          geometry:
            type: Point
            coordinates:
              - 5.3
              - 52.6
          properties:
            license_plate: AA-BB-11
        - type: Feature
          geometry:
            type: Point
            coordinates:
              - 5.4
              - 52.5
          properties: {}
  Car:
    description: Information about a car
    required:
      - type
      - geometry
      - properties
    type: object
    properties:
      geometry:
        $ref: '#/definitions/Geometry'
      type:
        type: string
      properties:
        type: object
    example:
      type: Feature
      geometry:
        type: Point
        coordinates:
          - 5.3
          - 52.6
      properties:
        id: 1
        license_plate: AA-BB-11
        driver_name: Pietje Puk
  Geometry:
    description: Geometry element
    required:
      - coordinates
      - type
    type: object
    properties:
      type:
        enum:
          - Point
      coordinates:
        type: array
        items:
          type: number
    example: |-
      type: "Point",
      coordinates:
        - 5.2,
        - 52.4
  CarsInfo:
    description: Collection of Cars locations with info
    required:
      - type
      - features
    type: object
    properties:
      type:
        type: string
      features:
        type: array
        items:
          $ref: '#/definitions/Car'
    example:
      type: FeatureCollection
      features:
        - type: Feature
          geometry:
            type: Point
            coordinates:
              - 5.3
              - 52.6
          properties:
            id: 1
            license_plate: AA-BB-11
            driver_name: Pietje Puk
        - type: Feature
          geometry:
            type: Point
            coordinates:
              - 5.4
              - 52.5
          properties:
            id: 2
            license_plate: CC-DD-22
            driver_name: Daan de Wit
securityDefinitions:
  OAuth2AzureAD:
    type: oauth2
    description: OAuth through Azure AD
    flow: implicit
    authorizationUrl: 'https://azuread.url'
    scopes:
      snbplanningapi.read: Read access to snbplanningapi.
    x-tokenInfoFunc: openapi_server.controllers.security_controller_.info_from_OAuth2AzureAD
    x-scopeValidateFunc: connexion.decorators.security.validate_scope
