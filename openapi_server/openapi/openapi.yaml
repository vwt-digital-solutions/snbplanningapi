openapi: 3.0.1
info:
  contact:
    email: opensource@vwt.digital
    name: VolkerWessels Telecom - Digital Ambition Team
    url: https://vwt-digital.github.io/
  description: Endpoint to retreive the latest car locations
  license:
    name: GNU GPLv3
    url: https://www.gnu.org/licenses/gpl.txt
  title: snbplanningtool
  version: 1.0.0
  x-audience: company-internal
  x-api-id: e2a63575-f436-4e31-8f34-fadbad0d9693
servers:
- url: //PROJECT_ID.appspot.com/
security:
- OAuth2AzureAD:
  - snbplanningapi.read
paths:
  /cars:
    get:
      description: Get a list of all car geolocations
      operationId: cars_get
      parameters:
      - description: Time offset range in hours for retrieving entries
        in: query
        name: offset
        schema:
          default: 168
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cars'
          description: Successful response - returns an array of locations
      summary: Get car locations
      x-openapi-router-controller: openapi_server.controllers.cars_controller
  /carsinfo:
    get:
      description: Get a list of all car geolocations with info
      operationId: carsinfo_get
      parameters:
      - description: Time offset range in hours for retrieving entries
        in: query
        name: offset
        schema:
          default: 168
          type: integer
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarsInfo'
          description: Successful response - returns an array of locations with info
      summary: Get car info
      x-openapi-router-controller: openapi_server.controllers.cars_controller
    post:
      description: Post a list of all car geolocations with info
      operationId: carsinfo_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CarInfo'
        required: true
      responses:
        201:
          content: {}
          description: Successful POST
      summary: Post car info
      x-openapi-router-controller: openapi_server.controllers.cars_controller
      x-codegen-request-body-name: body
  /tokens:
    get:
      description: List of tokens
      operationId: list_tokens
      parameters:
      - in: query
        name: assigned
        schema:
          default: false
          type: boolean
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tokens'
          description: OK
      summary: Get a list of tokens
      x-openapi-router-controller: openapi_server.controllers.cars_controller
  /workitems/active:
    get:
      description: List of work items
      operationId: list_work_items
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: OK
      summary: Get a list of work items
      x-openapi-router-controller: openapi_server.controllers.workitems_controller
  /workitems/all:
    get:
      description: List of work items
      operationId: list_all_work_items
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkItems'
          description: OK
      summary: Get a list of work items
      x-openapi-router-controller: openapi_server.controllers.workitems_controller
components:
  schemas:
    Cars:
      description: Collection of Cars
      example:
        type: FeatureCollection
        features:
        - type: Feature
          geometry:
            type: Point
            coordinates:
            - 5.3
            - 52.6
          properties:
            license_plate: AA-BB-11
        - type: Feature
          geometry:
            type: Point
            coordinates:
            - 5.4
            - 52.5
          properties: {}
      properties:
        type:
          type: string
        features:
          items:
            $ref: '#/components/schemas/Car'
          type: array
      required:
      - features
      - type
      type: object
    Car:
      description: Information about a car
      example:
        type: Feature
        geometry:
          type: Point
          coordinates:
          - 5.3
          - 52.6
        properties:
          id: 1
          license_plate: AA-BB-11
          driver_name: Pietje Puk
      properties:
        geometry:
          $ref: '#/components/schemas/Geometry'
        type:
          type: string
        properties:
          properties: {}
          type: object
      required:
      - geometry
      - properties
      - type
      type: object
    Geometry:
      description: Geometry element
      example: |-
        type: "Point",
        coordinates:
          - 5.2,
          - 52.4
      properties:
        type:
          enum:
          - Point
          type: string
        coordinates:
          items:
            type: number
          type: array
      required:
      - coordinates
      - type
      type: object
    CarsInfo:
      example:
        items:
        - id: 123456789
          license_plate: AB-12-CD
          driver_name: Billy Gates
          token: some-token-value
      properties:
        items:
          $ref: '#/components/schemas/CarInfo'
      type: object
    CarInfo:
      description: Car Info details
      example:
      - id: 123456789
        license_plate: AB-12-CD
        driver_name: Billy Gates
        token: some-token-value
      properties:
        id:
          type: integer
        license_plate:
          type: string
        driver_name:
          type: string
        token:
          type: string
      required:
      - driver_name
      - license_plate
      type: object
    Tokens:
      description: Collection of list with tokens
      example:
        items: '{}'
      properties:
        items:
          properties: {}
          type: object
      required:
      - items
      type: object
    WorkItems:
      example:
        items:
          Status: Status
          DuurMinuten: 0
          MedewerkerNaam: MedewerkerNaam
          Omschrijving: Omschrijving
          UrenCategorieCode: UrenCategorieCode
          ProjectNummer: ProjectNummer
          WerkbonNummer: WerkbonNummer
          StartDatumTijd: 2000-01-23T04:56:07.000+00:00
          Postcode: Postcode
          EinddatumTijd: 2000-01-23T04:56:07.000+00:00
          Administratie: Administratie
          Plaats: Plaats
          WerkbonType: WerkbonType
          Straat: Straat
          Toevoeging: Toevoeging
          geometry: |-
            type: "Point",
            coordinates:
              - 5.2,
              - 52.4
          MedewerkerNummer: MedewerkerNummer
          L2GUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        items:
          $ref: '#/components/schemas/WorkItem'
      type: object
    WorkItem:
      description: Link2 work item
      example:
        Status: Status
        DuurMinuten: 0
        MedewerkerNaam: MedewerkerNaam
        Omschrijving: Omschrijving
        UrenCategorieCode: UrenCategorieCode
        ProjectNummer: ProjectNummer
        WerkbonNummer: WerkbonNummer
        StartDatumTijd: 2000-01-23T04:56:07.000+00:00
        Postcode: Postcode
        EinddatumTijd: 2000-01-23T04:56:07.000+00:00
        Administratie: Administratie
        Plaats: Plaats
        WerkbonType: WerkbonType
        Straat: Straat
        Toevoeging: Toevoeging
        geometry: |-
          type: "Point",
          coordinates:
            - 5.2,
            - 52.4
        MedewerkerNummer: MedewerkerNummer
        L2GUID: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        Administratie:
          type: string
        DuurMinuten:
          type: integer
        StartDatumTijd:
          format: date-time
          type: string
        EinddatumTijd:
          format: date-time
          type: string
        L2GUID:
          format: uuid
          type: string
        MedewerkerNaam:
          type: string
        MedewerkerNummer:
          type: string
        Omschrijving:
          type: string
        Plaats:
          type: string
        Postcode:
          type: string
        ProjectNummer:
          type: string
        Status:
          type: string
        Straat:
          type: string
        Toevoeging:
          type: string
        UrenCategorieCode:
          type: string
        WerkbonNummer:
          type: string
        WerkbonType:
          type: string
        geometry:
          $ref: '#/components/schemas/Geometry'
      type: object
  securitySchemes:
    OAuth2AzureAD:
      description: OAuth through Azure AD
      flows:
        implicit:
          authorizationUrl: https://azuread.url
          scopes:
            snbplanningapi.read: Read access to snbplanningapi.
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller_.info_from_OAuth2AzureAD
      x-scopeValidateFunc: connexion.decorators.security.validate_scope
